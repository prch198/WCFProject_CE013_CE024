//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TenantFinderClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="House", Namespace="http://schemas.datacontract.org/2004/07/TenantFinder")]
    [System.SerializableAttribute()]
    public partial class House : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqTenantField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int No {
            get {
                return this.NoField;
            }
            set {
                if ((this.NoField.Equals(value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rent {
            get {
                return this.RentField;
            }
            set {
                if ((this.RentField.Equals(value) != true)) {
                    this.RentField = value;
                    this.RaisePropertyChanged("Rent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqTenant {
            get {
                return this.ReqTenantField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqTenantField, value) != true)) {
                    this.ReqTenantField = value;
                    this.RaisePropertyChanged("ReqTenant");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotFoundHouse", Namespace="http://schemas.datacontract.org/2004/07/TenantFinder")]
    [System.SerializableAttribute()]
    public partial class NotFoundHouse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IHouseService")]
    public interface IHouseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/GetHouse", ReplyAction="http://tempuri.org/IHouseService/GetHouseResponse")]
        TenantFinderClient.ServiceReference1.House GetHouse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/GetHouse", ReplyAction="http://tempuri.org/IHouseService/GetHouseResponse")]
        System.Threading.Tasks.Task<TenantFinderClient.ServiceReference1.House> GetHouseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/AddHouse", ReplyAction="http://tempuri.org/IHouseService/AddHouseResponse")]
        bool AddHouse(TenantFinderClient.ServiceReference1.House h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/AddHouse", ReplyAction="http://tempuri.org/IHouseService/AddHouseResponse")]
        System.Threading.Tasks.Task<bool> AddHouseAsync(TenantFinderClient.ServiceReference1.House h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/UpdateHouse", ReplyAction="http://tempuri.org/IHouseService/UpdateHouseResponse")]
        TenantFinderClient.ServiceReference1.House UpdateHouse(TenantFinderClient.ServiceReference1.House h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/UpdateHouse", ReplyAction="http://tempuri.org/IHouseService/UpdateHouseResponse")]
        System.Threading.Tasks.Task<TenantFinderClient.ServiceReference1.House> UpdateHouseAsync(TenantFinderClient.ServiceReference1.House h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/DeleteHouse", ReplyAction="http://tempuri.org/IHouseService/DeleteHouseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TenantFinderClient.ServiceReference1.NotFoundHouse), Action="http://tempuri.org/IHouseService/DeleteHouseNotFoundHouseFault", Name="NotFoundHouse", Namespace="http://schemas.datacontract.org/2004/07/TenantFinder")]
        bool DeleteHouse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/DeleteHouse", ReplyAction="http://tempuri.org/IHouseService/DeleteHouseResponse")]
        System.Threading.Tasks.Task<bool> DeleteHouseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/GetAllHouses", ReplyAction="http://tempuri.org/IHouseService/GetAllHousesResponse")]
        System.Data.DataSet GetAllHouses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHouseService/GetAllHouses", ReplyAction="http://tempuri.org/IHouseService/GetAllHousesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllHousesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHouseServiceChannel : TenantFinderClient.ServiceReference1.IHouseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HouseServiceClient : System.ServiceModel.ClientBase<TenantFinderClient.ServiceReference1.IHouseService>, TenantFinderClient.ServiceReference1.IHouseService {
        
        public HouseServiceClient() {
        }
        
        public HouseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HouseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HouseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HouseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TenantFinderClient.ServiceReference1.House GetHouse(int id) {
            return base.Channel.GetHouse(id);
        }
        
        public System.Threading.Tasks.Task<TenantFinderClient.ServiceReference1.House> GetHouseAsync(int id) {
            return base.Channel.GetHouseAsync(id);
        }
        
        public bool AddHouse(TenantFinderClient.ServiceReference1.House h) {
            return base.Channel.AddHouse(h);
        }
        
        public System.Threading.Tasks.Task<bool> AddHouseAsync(TenantFinderClient.ServiceReference1.House h) {
            return base.Channel.AddHouseAsync(h);
        }
        
        public TenantFinderClient.ServiceReference1.House UpdateHouse(TenantFinderClient.ServiceReference1.House h) {
            return base.Channel.UpdateHouse(h);
        }
        
        public System.Threading.Tasks.Task<TenantFinderClient.ServiceReference1.House> UpdateHouseAsync(TenantFinderClient.ServiceReference1.House h) {
            return base.Channel.UpdateHouseAsync(h);
        }
        
        public bool DeleteHouse(int id) {
            return base.Channel.DeleteHouse(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHouseAsync(int id) {
            return base.Channel.DeleteHouseAsync(id);
        }
        
        public System.Data.DataSet GetAllHouses() {
            return base.Channel.GetAllHouses();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllHousesAsync() {
            return base.Channel.GetAllHousesAsync();
        }
    }
}
